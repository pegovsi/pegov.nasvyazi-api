// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Pegov.Nasvyazi.Persistence.Postgres;

namespace Pegov.Nasvyazi.Persistence.Postgres.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20201013211045_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("LastName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("_accountStatusId")
                        .HasColumnName("AccountStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("_accountStatusId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Chats.AccountChat", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ChatId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("AccountId1")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ChatId1")
                        .HasColumnType("uuid");

                    b.HasKey("AccountId", "ChatId");

                    b.HasIndex("AccountId1");

                    b.HasIndex("ChatId");

                    b.HasIndex("ChatId1");

                    b.ToTable("AccountChat");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Chats.Chat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int?>("ChatTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<Guid?>("GroupId")
                        .HasColumnType("uuid");

                    b.Property<string>("Logo")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("_chatStatusId")
                        .HasColumnName("ChatStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ChatTypeId");

                    b.HasIndex("GroupId");

                    b.HasIndex("Name");

                    b.HasIndex("_chatStatusId");

                    b.ToTable("Chats");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Groups.Group", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("_groupTypeId")
                        .HasColumnName("GroupTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("Name");

                    b.HasIndex("_groupTypeId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Organizations.AccountOrganization", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrganizationId")
                        .HasColumnType("uuid");

                    b.HasKey("AccountId", "OrganizationId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("AccountOrganization");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Organizations.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Inn")
                        .IsRequired()
                        .HasColumnType("varchar(12)")
                        .HasMaxLength(12);

                    b.Property<string>("Kpp")
                        .IsRequired()
                        .HasColumnType("varchar(9)")
                        .HasMaxLength(9);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("_entityStatusId")
                        .HasColumnName("EntityStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("_entityStatusId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Positions.AccountPosition", b =>
                {
                    b.Property<Guid>("AccountId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("PositionId1")
                        .HasColumnType("uuid");

                    b.HasKey("AccountId", "PositionId");

                    b.HasIndex("PositionId");

                    b.HasIndex("PositionId1");

                    b.ToTable("AccountPosition");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Positions.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255);

                    b.Property<int>("_entityStatusId")
                        .HasColumnName("EntityStatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("_entityStatusId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Enumerations.AccountStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("AccountStatus");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Enumerations.ChatStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("ChatStatus");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Enumerations.ChatType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("ChatType");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Enumerations.EntityStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("EntityStatus");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Enumerations.GroupType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(200)")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("GroupType");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Enumerations.AccountStatus", "AccountStatus")
                        .WithMany()
                        .HasForeignKey("_accountStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Address")
                                .HasColumnType("text");

                            b1.HasKey("AccountId");

                            b1.ToTable("Accounts");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });

                    b.OwnsOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Phone", "Phone", b1 =>
                        {
                            b1.Property<Guid>("AccountId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Number")
                                .HasColumnType("text");

                            b1.HasKey("AccountId");

                            b1.ToTable("Accounts");

                            b1.WithOwner()
                                .HasForeignKey("AccountId");
                        });
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Chats.AccountChat", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", null)
                        .WithMany("Chats")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId1");

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Chats.Chat", null)
                        .WithMany("AccountChats")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Chats.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId1");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Chats.Chat", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Enumerations.ChatType", "ChatType")
                        .WithMany()
                        .HasForeignKey("ChatTypeId");

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Groups.Group", null)
                        .WithMany("Chats")
                        .HasForeignKey("GroupId");

                    b.HasOne("Pegov.Nasvyazi.Domains.Enumerations.ChatStatus", "ChatStatus")
                        .WithMany()
                        .HasForeignKey("_chatStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Groups.Group", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", "Account")
                        .WithMany("Groups")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pegov.Nasvyazi.Domains.Enumerations.GroupType", "GroupType")
                        .WithMany()
                        .HasForeignKey("_groupTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Organizations.AccountOrganization", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", "Account")
                        .WithMany("Organizations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Organizations.Organization", "Organization")
                        .WithMany("Accounts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Organizations.Organization", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Enumerations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("_entityStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Positions.AccountPosition", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Accounts.Account", "Account")
                        .WithMany("Positions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Positions.Position", null)
                        .WithMany("Accounts")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Pegov.Nasvyazi.Domains.Entities.Positions.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId1");
                });

            modelBuilder.Entity("Pegov.Nasvyazi.Domains.Entities.Positions.Position", b =>
                {
                    b.HasOne("Pegov.Nasvyazi.Domains.Enumerations.EntityStatus", "EntityStatus")
                        .WithMany()
                        .HasForeignKey("_entityStatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
